[mix]
videocaps = video/x-raw,format=I420,width=1920,height=1080,framerate=25/1,pixel-aspect-ratio=1/1,interlace-mode=progressive
audiocaps = audio/x-raw,format=S16LE,channels=2,layout=interleaved,rate=48000

; tcp-ports will be 10000,10001,10002
sources = cam,slides

; setting this will create another stream-blanker which can be used to stream slides with the blanker-feature
;slides_source_name=grabber

; number of stereo-streams used in the mix. the exact same number needs to be supplied from each
; source and is passed to each sink
audiostreams = 1

; set the initial audio source (shortcut for setting the volume of the
; audio-sources to 1.0), defaults to the first source
;audiosource = cam1

[source.cam]
;deinterlace = yes
;deinterlace = no
deinterlace = assume-progressive
;kind = decklink
;devicenumber = 0
;video_connection = SDI
;video_mode = 1080i50
;video_format = auto
;audio_connection = embedded
;volume=0.5

;audiostream[0] = 0+1
;audiostream[1] = 2
;audiostream[2] = 3


[source.slides]
;deinterlace = yes
;deinterlace = no
deinterlace = assume-progressive
;kind = tcp
;volume = 0.5

;[source.background]
;kind = img
;imguri = file:///opt/voc/share/background.png


[output-buffers]
; voctocore has a buffer on all video-outputs, that store video-frames for your
; sink when it can't handle them all in real-time. so if your sink takes 2 seconds
; to process a really hard to precess frame, voctomix needs to store 50 frames
; for you, hoping that your sink will catch up soon.
; if the sink doesn ot catch up in time, voctomix will drop it and remove it
; from the output. it's your task to restart it in such a situation.
; by default, voctomix will store up to 500 frames for your sink (20 seconds)
; you might want to up that even more for your recording-sink, so that it never
; gets disconnected. for this reason, the following configuration raises the
; default limit for the mix_out sink to a whopping 10'000 frames (400 seconds)
;cam1_mirror = 500
;cam2_mirror = 500
;grabber_mirror = 500
mix_out = 10000
;streamblanker_out = 500

[previews]
; disable if ui & server run on the same computer and can exchange uncompressed video frames
enabled = false
deinterlace = false

; use vaapi to encode the previews, can be h264, mpeg2 or jpeg (BUT ONLY h264 IS TESTED)
; not all encoders are available on all CPUs
;vaapi = h264

; default to mix-videocaps, only applicable if enabled=true
; you can change the framerate and the width/height, but nothing else
;videocaps = video/x-raw,width=1024,height=576,framerate=25/1

[stream-blanker]
enabled = true
sources = pause,nostream
volume = 1.0

;[source.stream-blanker-pause]
;kind=img
;imguri=file:///home/peter/VOC/voctomix/bgloop.jpg

[mirrors]
; disable if not needed
enabled = true

[composites]
; fullscreen source A (B is full transparent)
fs.a                  = *
fs.b                  = *
fs.alpha-b            = 0
fs.noswap             = true

; fullscreen source A (facing picture-in-picture)
fs-pip.a              = *
fs-pip.b              = 0.86/0.85 0.0
fs-pip.alpha-b        = 0
fs-pip.inter          = true

; fullscreen source A (facing side-by-side)
fs-sbs.a              = *
fs-sbs.b              = 1.0/0.5 0.0
fs-sbs.alpha-b        = 0
fs-sbs.inter          = true

; fullscreen source A (facing side-by-side-preview)
fs-sbsp.a             = *
fs-sbsp.b             = 1.0 0.0
fs-sbsp.alpha-b       = 0
fs-sbsp.crop-b        = 0.31/0
fs-sbsp.inter         = true

; picture-in-picture (fullscreen source A with B as small overlay)
pip.a                   = *
pip.b                   = 0.73/0.72 0.26
pip.noswap              = true

; side-by-side (source A at left and B at right side)
sbs.a                   = 0.008/0.25 0.49
sbs.b                   = 0.503/0.25 0.49

; side-by-side-preview (source A bigger and B smaller and cropped beside)
sbsp.a                  = 0.006/0.01 0.75
sbsp.b                  = 0.60/0.42 0.56
sbsp.crop-b             = 0.31/0

; fullscreen source B (overlapping A)
fs-b.a                  = *
fs-b.b                  = *
fs-b.noswap             = true

; fullscreen source B (facing side-by-side)
fs-b-sbs.a              = 0.0/0.5 0.0
fs-b-sbs.alpha-a        = 0.0
fs-b-sbs.b              = *
fs-b-sbs.inter          = true

; fullscreen source B (facing side-by-side-preview)
fs-b-sbsp.a             = 0.0/1.0 0.0
fs-b-sbsp.b             = *
fs-b-sbsp.inter         = true

# one-opon-the-other (like one-opon-the-other but overlapping)
oao.a                   = 0.3/0.2 0.4
oao.alpha-a             = 0.5
oao.b                   = 0.2/0.3 0.6
oao.inter               = true
oao.noswap              = true

[transitions]
; list of transitions each one can be freely named and is a list of composites
; which will be morphed into an animation. Interpolation will be linear with two
; composites and B-Splines for more.

; unique name           =   ms, from / [... /] to
fs-fs                   = 500, fs / fs-b
fs-pip                  = 500, fs-pip / pip
fs-sbs                  = 500, fs-sbs / sbs
fs-b-pip                = 500, fs-b / pip
fs-b-sbs                = 500, fs-b-sbs / sbs
fs-sbsp                 = 500, fs-sbsp / sbsp
fs-b-sbsp               = 500, fs-b-sbsp / sbsp
pip-pip                 = 1000, pip / sbs / pip
sbs-sbs                 = 1000, sbs / oao / sbs
_sbs-sbs                = 1000, ^sbs / ^oao / sbs

; default blending
; unique name                       =   ms, from / [... /] to
def                     = 1000, * / *

[gamma]
ms                      = 1000
